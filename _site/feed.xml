<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://ye0ngjin.github.io/blog-before-changing-theme/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ye0ngjin.github.io/blog-before-changing-theme/" rel="alternate" type="text/html" /><updated>2023-11-30T05:17:06+00:00</updated><id>https://ye0ngjin.github.io/blog-before-changing-theme/feed.xml</id><title type="html"> 개발 공부 블로그 💻</title><subtitle>공부 &amp; 취미 블로그</subtitle><author><name>Ye0ngjin</name></author><entry><title type="html">깃허브페이지에 블로그 올리기</title><link href="https://ye0ngjin.github.io/blog-before-changing-theme/blog/how-to/" rel="alternate" type="text/html" title="깃허브페이지에 블로그 올리기" /><published>2023-11-02T00:00:00+00:00</published><updated>2023-11-03T00:00:00+00:00</updated><id>https://ye0ngjin.github.io/blog-before-changing-theme/blog/how-to</id><content type="html" xml:base="https://ye0ngjin.github.io/blog-before-changing-theme/blog/how-to/"><![CDATA[<hr />

<h2 id="github-블로그-블로그-포스팅하는-방법과--github-블로그-시작하기를-참고하였습니다"><a href="https://ansohxxn.github.io/blog/posting" target="blank">[Github 블로그] 블로그 포스팅하는 방법</a>과  <a href="https://honbabzone.com/jekyll/start-gitHubBlog" target="blank">GitHub 블로그 시작하기</a>를 참고하였습니다.</h2>
<blockquote>
  <p><span style="font-style: normal;">첫번째 블로그의 <a href="https://github.com/ansohxxn/ansohxxn.github.io" target="blank">깃허브 저장소</a><span style="display: inline-block; padding-left: 7%; padding-right: 7%;">|</span>두번째 블로그의  <a href="https://github.com/7271kim/7271kim.github.com" target="blank">깃허브 저장소</a></span></p>
</blockquote>

<hr />

<h2 id="준비되어야-할-사항">준비되어야 할 사항</h2>
<h3 id="1-루비-지킬-번들러">1. 루비, 지킬, 번들러</h3>
<ul>
  <li>루비 - <a href="https://www.ruby-lang.org/ko" target="blank">ruby-lang.org/ko</a></li>
  <li>지킬 - <a href="https://jekyllrb.com" target="blank">jekyllrb.com</a> 또는 <a href="https://jekyllrb-ko.github.io" target="blank">jekyllrb-ko.github.io</a></li>
  <li>번들러 - <a href="https://bundler.io" target="blank">bundler.io</a></li>
</ul>

<p>루비를 설치하고 터미널에서 아래의 명령어를 입력한다.</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">gem install jekyll bundler
</span></code></pre></div></div>

<p>Mac을 사용중이라면 <a href="https://til.younho9.dev/docs/frontend/jekyll/jekyll-github-page%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EA%B0%9C%EC%9D%B8%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/#jekyll-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0-mac" target="blank">가상환경을 이용하여 루비를 설치</a>하는 것을 추천한다.
<br /><br /></p>
<h3 id="2-테마-선택">2. 테마 선택</h3>
<p><a href="http://jekyllthemes.org" target="blank">http://jekyllthemes.org</a><br />
<a href="http://themes.jekyllrc.org" target="blank">http://themes.jekyllrc.org</a><br />
<a href="https://jekyllthemes.io" target="blank">https://jekyllthemes.io</a><br />
위 사이트들에서 볼 수 있듯이, 지킬에는 다양한 무료 테마가 존재하고 이것들을 이용해 블로그에 테마를 적용시킬 수 있다.<br />
참고로 내가 적용한 테마는 <a href="https://github.com/mmistakes/minimal-mistakes" target="blank">minimal-mistakes</a>를 <a href="https://github.com/ansohxxn/ansohxxn.github.io" target="blank">ansohxxn님이 커스터마이징한 테마</a>이다.</p>

<blockquote>
  <p>그리고 그냥 포크를 하면 <strong>깃허브에 잔디</strong>가 안심어진다!!<br />
해결할 방법은 사용할 테마가 적용된 블로그의 저장소를 다운받아서 커스터마이징하거나,<br />
<a href="https://soranhan.tistory.com/11" target="blank">이것</a>을 참고하여 깃허브 저장소에 올리면 잔디가 심어진다.<br />
(물론 <strong>라이센스</strong>를 잘 <strong>확인</strong>해야한다.)
<br /></p>
</blockquote>

<h3 id="3-깃허브-저장소에-올리기">3. 깃허브 저장소에 올리기</h3>
<p>테마까지 적용된 양식이 생겼다면, 본인의 깃허브 저장소에 올린다.<br />
참고로 저장소를 생성할 때 이름을 <code class="language-plaintext highlighter-rouge">깃허브아이디.github.io</code>로 정하면, <code class="language-plaintext highlighter-rouge">https://깃허브아이디.github.io/</code>로 블로그에 접속할 수 있다.
<br /></p>

<h3 id="4-markdown-을-지원하는-에디터">4. Markdown 을 지원하는 에디터</h3>

<p><strong>ex)</strong> <code class="language-plaintext highlighter-rouge">Visual Studio Code</code>, <code class="language-plaintext highlighter-rouge">Github Codespaces</code><br />
<strong>로컬</strong>에서 수정할 경우 <strong>VS Code</strong>를 사용하면 좋고, <strong>온라인</strong>으로 수정하려면 <strong>Codespaces</strong>를 사용하면 좋다.</p>

<blockquote>
  <p><strong>주의</strong> , <strong>Codespaces</strong> 사용시 무료로 사용할 수 있는 시간과 용량이 정해져 있으니 확인하자.</p>
  <blockquote>
    <p><a href="https://docs.github.com/ko/get-started/learning-about-github/githubs-plans#%EA%B0%9C%EC%9D%B8-%EA%B3%84%EC%A0%95%EC%9A%A9-github-free" target="blank">개인 계정용 GitHub Free 요금 플랜</a><br />
<a href="https://docs.github.com/ko/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces#monthly-included-storage-and-core-hours-for-personal-accounts" target="blank">개인 계정의 월별 포함 저장 공간 및 핵심 시간</a><br />
<a href="https://docs.github.com/ko/codespaces/customizing-your-codespace/setting-your-timeout-period-for-github-codespaces" target="blank">Codespaces의 시간 제한 기간 설정</a><br />
<a href="https://docs.github.com/ko/codespaces/troubleshooting/troubleshooting-included-usage" target="blank">Codespaces 포함된 사용량을 최대한 활용하기</a></p>
  </blockquote>
</blockquote>

<p><br /></p>
<h2 id="게시글-작성법-vs-code-or-codespaces-">게시글 작성법( VS Code or Codespaces )</h2>
<h3 id="1-_posts-폴더">1. _posts 폴더</h3>

<p><code class="language-plaintext highlighter-rouge">깃허브아이디.github.io</code> 이름의 폴더 위치에 <strong>_posts</strong> 폴더가 이미 있다면 냅두고 없다면 <strong>_posts</strong> 라는 이름의 폴더를 생성해 준다.</p>

<p><strong><em>모든 포스트 파일은 _posts 폴더 내에 위치하여야 한다.</em></strong>
<br /><br /></p>
<h3 id="2-yyyy-mm-dd-titlemd-형식의-파일">2. yyyy-mm-dd-title.md 형식의 파일</h3>

<p>포스트 파일의 확장자는 <code class="language-plaintext highlighter-rouge">md</code>이어야 한다. <strong>yyyy-mm-dd</strong> 형식의 날짜와 함께 <strong>-포스트 제목</strong>을 붙여 준다. 포스트 제목은 영어로 쓸 것을 추천</p>

<p>위에서 말한 <strong>_posts</strong> 폴더에 포스트 파일이 위치해야 한다.</p>

<p><em>ex) 2023-11-02-post-title.md</em>
<br /><br /></p>
<h3 id="3-머릿말front-matter을-게시글-상단에-작성">3. 머릿말(Front-Matter)을 게시글 상단에 작성</h3>

<p>이제 md 파일에 포스트를 작성해보자. 내용을 작성하기 전에 이 포스트의 정보를 머릿말로 적어주어야 한다.</p>

<p>우선 위 아래에 <code class="language-plaintext highlighter-rouge">---</code> 를 써서 머릿말 쓰는 영역을 구분해주어야 한다.</p>

<p>머릿말에 들어가는 정보는 다음과 같다.
<br /></p>

<ul>
  <li>
    <p><strong>title</strong> : 포스트의 제목을 큰 따옴표로 적어 준다. 이 title을 적어주지 않으면 .md 파일 이름으로 적어주었던 title 부분이 제목으로 업로드 된다.</p>
  </li>
  <li>
    <p><strong>excerpt</strong> : 포스트 목록에서 보여지는 블로그 소개 글로 들어간다.</p>
  </li>
  <li>
    <p><strong>categories</strong> : 이 포스트의 카테고리는 <code class="language-plaintext highlighter-rouge">Blog</code>로 정했다.</p>
  </li>
  <li><strong>tags</strong> : 태그와 카테고리의 차이점은 카테고리는 sub url이 붙는 페이지가 있지만 태그는 없다는 것이다. 카테고리 보다 좀 더 세부적.
    <ul>
      <li>[] 대괄호 안에서 , 콤마로 구분해주어 여러개의 태그를 포스트에 지정할 수 있다.</li>
    </ul>
  </li>
  <li>
    <p><strong>toc</strong> : Table of Contents. 포스트의 헤더들만 보여주는 목차를 사용할 것인지의 여부. ture 로 해주면 포스트의 목차가 보이게 된다.</p>
  </li>
  <li><strong>toc_sticky</strong> : true로 해주면 목차가 스크롤을 따라 움직이게 된다! 스크롤을 내리면 목차도 따라 내려오게 됨.
    <ul>
      <li>이 밖에도 이 포스트의 toc_icon, toc_label 도 설정할 수 있다.</li>
    </ul>
  </li>
  <li>
    <p><strong>date</strong> : 글을 처음 작성한 날짜. yyyy-mm-dd 형식으로 작성.</p>
  </li>
  <li><strong>last_modified_at</strong> : 이 글을 수정한 날짜</li>
</ul>

<p>이 밖에도 <code class="language-plaintext highlighter-rouge">layout</code>, <code class="language-plaintext highlighter-rouge">permalink</code>, <code class="language-plaintext highlighter-rouge">published</code>, <code class="language-plaintext highlighter-rouge">author_profile</code> 등등 머릿말에 쓰이는 여러 변수들이 있다.<br />
<strong>그리고 내가 원하는 변수를 머릿말에 지정해서 사용할 수도 있다.</strong></p>

<p>머릿말에 쓰인 변수는 <code class="language-plaintext highlighter-rouge">page</code> Liquid 변수로 사용될 수 있다. 예를 들어 머릿말에 적힌 categories 변수 값은 “Blog”이므로 Liquid 언어로 “{{page.categories}}” 를 본문 내에 쓰면 “Blog”값이 출력된다. <a href="https://shopify.github.io/liquid/" target="_blank">Liquid 언어 문서</a>
<br /><br /></p>
<h3 id="4-포스트-내용을-markdown-문법으로-작성">4. 포스트 내용을 Markdown 문법으로 작성</h3>

<p>머릿말이 <code class="language-plaintext highlighter-rouge">---</code>로 끝난 이후부터는 포스트 본문 영역이다.
jekyll은 <code class="language-plaintext highlighter-rouge">HTML</code>과 <code class="language-plaintext highlighter-rouge">Markdown</code>을 지원하는데 마크다운이 HTML보다 간략하고 편한 문법이다.<br />
대부분 마크다운 문법으로 포스트를 작성해주면 되는데, 일부 필요한 부분은 HTML과 Liquid로 작성해준다.
<br /><br /></p>
<h3 id="5-마크다운으로-쓴-포스트-내용을-미리-보기">5. 마크다운으로 쓴 포스트 내용을 미리 보기</h3>

<p>마크다운 문법으로 포스트 본문을 작성하기 때문에 쓰는 것과 보이는 것은 많이 다르다. Visual Studio Code 내에서 설치하여 사용할 수 있는 <code class="language-plaintext highlighter-rouge">Preview</code> 기능과 <code class="language-plaintext highlighter-rouge">로컬 서버</code>로 내가 작성한 마크다운 글이 어떻게 보여지는지 확인해보며 포스팅 하자.<br />
<br /><br /></p>
<h4 id="markdown-preview-enhanced">Markdown Preview Enhanced</h4>

<p>Visual Studio code <code class="language-plaintext highlighter-rouge">확장(extension)</code>에서 Markdown Preview Enhanced를 설치하여 마크다운 문법으로 글을 작성하면서 동시에 웹에서 어떻게 보여질지 확인할 수 있다.</p>

<h4 id="로컬-서버에서-블로그에-적용될-모습-확인">로컬 서버에서 블로그에 적용될 모습 확인</h4>
<hr />

<h5 id="chatgpt-답변-내용">ChatGPT 답변 내용</h5>
<blockquote>
  <p>로컬 환경에서 Jekyll을 실행하여 GitHub Pages와 동일한 결과를 얻으려면 다음 단계를 따를 수 있습니다:</p>

  <ol>
    <li>Jekyll 설치: 먼저 컴퓨터에 Jekyll을 설치해야 합니다. Jekyll을 설치하려면 Ruby가 필요하며 Ruby가 설치되어 있어야 합니다. Ruby를 설치한 후, 다음 명령을 사용하여 Jekyll을 설치할 수 있습니다:
      <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem <span class="nb">install </span>jekyll bundler
</code></pre></div>      </div>
    </li>
    <li>로컬 Jekyll 사이트 생성: Jekyll로 작성한 사이트의 복제본을 로컬 환경에 생성합니다. GitHub Pages 리포지토리를 클론한 후 해당 디렉터리로 이동하여 다음 명령을 실행합니다:
      <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">install</span>
</code></pre></div>      </div>
      <p>이 명령은 필요한 Jekyll 플러그인과 종속성을 설치합니다.</p>
    </li>
    <li>로컬에서 Jekyll 실행: 다음 명령을 사용하여 로컬에서 Jekyll을 실행합니다:
      <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div>      </div>
    </li>
  </ol>

  <p>이렇게 하면 로컬에서 Jekyll 서버가 실행되며, 웹 브라우저에서 <a href="http://localhost:4000" target="_blank">http://localhost:4000</a> 또는 <a href="http://127.0.0.1:4000" target="_blank">http://127.0.0.1:4000</a>에 접속하여 로컬로 생성된 GitHub Pages와 동일한 내용을 확인할 수 있습니다.</p>
</blockquote>

<p><strong>+</strong> 참고사항 <a href="https://medium.com/@pk60905/bundle-install-and-bundle-update-80f3d6f52214" target="blank">bundle install and bundle update</a>
<br /></p>
<hr />

<h3 id="6-관리자-페이지로-게시글-작성">6. 관리자 페이지로 게시글 작성</h3>

<ul>
  <li><strong>Gemfile</strong>을 열고 아래 코드를 추가한다.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem 'jekyll-admin', group: :jekyll_plugins
</code></pre></div>    </div>
  </li>
  <li>추가하고 나서, bundle install을 하고, 서버를 시작해준다.
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">install</span>
</code></pre></div>    </div>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div>    </div>
  </li>
  <li>로컬 서버로 실행했다면 <a href="http://localhost:4000/admin" target="_blank">http://localhost:4000/admin</a> 또는 <a href="http://127.0.0.1:4000/admin" target="_blank">http://127.0.0.1:4000/admin</a>에 접속하여 게시글을 작성할 수 있다.\</li>
</ul>
<hr />

<ul>
  <li><code class="language-plaintext highlighter-rouge">Github Codespaces</code>를 이용 중이라면, 주소창이 다음과 같을 것인데, <code class="language-plaintext highlighter-rouge">https://어쩌구저쩌구.github.dev/</code><br />
터미널에서 아래의 두 명령어를 입력하면(bundle install은 처음 한번만)
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">install</span>
</code></pre></div>    </div>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div>    </div>
  </li>
  <li>포트를 변경 안했다면 4000번 포트로 서버가 실행될 것이다.<br />
<code class="language-plaintext highlighter-rouge">https://어쩌구저쩌구-4000.app.github.dev/</code>로 접속하면 <code class="language-plaintext highlighter-rouge">http://localhost:4000</code>에서와 같은 화면이 나오고,<br />
<code class="language-plaintext highlighter-rouge">https://어쩌구저쩌구-4000.app.github.dev/admin/</code>로 접속하면 <code class="language-plaintext highlighter-rouge">http://localhost:4000/admin</code>에서와 같은 화면이 나온다.
<br /></li>
</ul>
<hr />

<h3 id="7-작성한-포스트-파일을-git-push-하여-github-pages-서버에-업로드">7. 작성한 포스트 파일을 git push 하여 Github Pages 서버에 업로드</h3>

<p>깃허브계정아이디.github.io 폴더 내의 현재 변동 사항을 git push 해주어 Github Pages 원격 서버에 올려주어야 한다.<br />
그러면 이제 내 블로그 페이지에 포스트가 올라온 것을 확인할 수 있을 것이다. 
<br /><br /></p>
<h2 id="참고-사항">참고 사항</h2>
<h3 id="지킬jekyll로-깃허브페이지-구성시-html-markdown-yaml-liquid-언어가-사용된다">지킬(Jekyll)로 깃허브페이지 구성시 HTML, Markdown, YAML, Liquid 언어가 사용된다.</h3>
<p><strong>Markdown</strong>과 <strong>Liquid</strong>는 게시글의 페이지에서 사용되고, <strong>YAML</strong>은 <code class="language-plaintext highlighter-rouge">_config.yml</code> 같은 구성 파일과<br />
각 게시글 페이지(<code class="language-plaintext highlighter-rouge">게시글.md</code>) 상단의 <code class="language-plaintext highlighter-rouge">---</code> , <code class="language-plaintext highlighter-rouge">---</code> 사이에서 <strong>머릿말</strong>로 변수 등을 지정할 때 사용된다.</p>

<p><br /></p>

<p><strong>참고할 만한 사이트</strong></p>
<blockquote>
  <p><a href="https://jekyllrb-ko.github.io/docs/datafiles" target="_blank">Jekyll-Docs-컨텐츠-데이터 파일</a><br />
<a href="https://inpa.tistory.com/entry/YAML-%F0%9F%93%9A-yaml-%EA%B0%9C%EB%85%90-%EB%AC%B8%EB%B2%95-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%F0%9F%92%AF-%EC%B4%9D%EC%A0%95%EB%A6%AC" target="_blank">YAML-📚-yaml-개념-문법-이해하기-💯-총정리</a><br />
<a href="https://goodgid.github.io/What-is-Liquid-Grammer" target="_blank">Liquid 문법 개념과 사용법</a><br />
<a href="https://shopify.github.io/liquid/basics/introduction" target="_blank">liquid-basics-introduction</a><br />
<a href="https://inchijeong.github.io/markdown/2019/03/20/markdown" target="_blank">마크다운(Markdown) 총정리</a><br />
<a href="https://simhyejin.github.io/2016/06/30/Markdown-syntax" target="_blank">[Markdown] 마크다운 문법</a>
<br /></p>
</blockquote>
<hr />

<h3 id="markdown문법--코드블록--인라인코드블록---탭-두번-or-스페이스-네번-">Markdown문법 . 코드블록 &amp; 인라인코드블록 ( + 탭 두번 or 스페이스 네번 )</h3>
<p><code>`</code>  <strong>:</strong> 하나씩 글자 양쪽 끝에 사용하면, `abc` =&gt; <code class="language-plaintext highlighter-rouge">abc</code><br />
<code>```</code> or <code>~~~</code> <strong>:</strong> 세개씩 글 위아래에 적용하면 아래와 같이 사용 가능하다.</p>

<p>```<strong><em>언어명</em></strong><br />
이 사이에 글 작성하면 코드 입력하기 좋음.<br />
<strong><em>언어명 ( cpp, c, python, java 등 )</em></strong> 을 입력하지 않으면 글 작성 박스 생성된다.<br />
```</p>

<h1 id="예시--언어명--">예시 ( 언어명 ❌ )</h1>
<blockquote>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>여기에 작성하면
   이렇게 보인다.
</code></pre></div>  </div>
  <p><br /></p>

  <blockquote>
    <p>위의 코드는 아래와 같이 작성되었다.<br />
<br />
```<br />
여기에 작성하면<br />
    이렇게 보인다.<br />
```</p>
  </blockquote>
</blockquote>

<p><strong>+ 예시 ( 탭 두번 or 스페이스 네번 )</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>이렇게
 도 사용가능
</code></pre></div></div>

<p>위 글은 각 줄의 앞에 탭 두번( or 스페이스 네번 )을 사용했다.</p>

<p><br /></p>

<h1 id="예시--언어명---1">예시 ( 언어명 ⭕ )</h1>
<blockquote>
  <h3 class="no_toc" id="출처-c-chapter-61--배열-기초"><strong><em>출처: <a href="https://ansohxxn.github.io/cpp/chapter6-1" target="_blank">C++ Chapter 6.1 : 배열 기초</a></em></strong></h3>
  <h2 class="no_toc" id="배열은-동일한-크기의-연속된-메모리-공간">배열은 동일한 크기의 연속된 메모리 공간</h2>

  <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">num</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">};</span> <span class="c1">// num[0] -&gt; 1, num[1] -&gt;2, num[2] -&gt; 3</span>
</code></pre></div>  </div>

  <ul>
    <li>변수 하나 하나에 대입하는 것 보다는 <code class="language-plaintext highlighter-rouge">num</code>이라는 배열로 한번에 1, 2, 3 값에 접근하는게 더 효율적</li>
    <li>int를 담을 수 있는 4byte 크기의 메모리 공간이 연속으로 3개 붙어있는 공간을 빌려오는 것.(총 12byte)
<br /></li>
  </ul>

  <blockquote>
    <p>위의 코드는 아래와 같이 작성되었다.<br />
<br />
```cpp<br />
int a = 1;<br />
int b = 2;<br />
int c = 3;<br />
<br />
int num[3] = {1, 2, 3}; // num[0] -&gt; 1, num[1] -&gt;2, num[2] -&gt; 3<br />
```<br />
<br />
- 변수 하나 하나에 대입하는 것 보다는 `num`이라는 배열로 한번에 1, 2, 3 값에 접근하는게 더 효율적<br />
- int를 담을 수 있는 4byte 크기의 메모리 공간이 연속으로 3개 붙어있는 공간을 빌려오는 것.(총 12byte)</p>
  </blockquote>
</blockquote>
<hr />

<h3 id="자주-사용하는-html-특수문자">자주 사용하는 HTML 특수문자</h3>

<pre><code class="language-HTML">&amp;nbsp;
" " : 공백(스페이스 한 칸)을 의미

&amp;ensp;
"  " : 공백(스페이스 두 칸)을 의미

&amp;emsp;
"    " : 공백(스페이스 네 칸)을 의미

&amp;lt;
부등호(&lt;)

&amp;gt;
부등호(&gt;)

&amp;amp;
앰퍼샌드(&amp;) 기호

&amp;quot;
쌍따옴표(")

&amp;#035;
sharp(#)

&amp;#039;
따옴표(')
</code></pre>

<p>출처: <a href="https://inpa.tistory.com/entry/HTML-%F0%9F%93%9A-%EF%BC%86nbsp-%EF%BC%86amp-%EF%BC%86lt-%EF%BC%86gt-%EF%BC%86quot-%EC%9D%98%EB%AF%B8" target="_blank">＆nbsp /＆amp /＆lt /＆gt /＆quot 기호 의미</a></p>
<hr />

<p><br /></p>

<hr />
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>👾 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 👾
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>]]></content><author><name>Ye0ngjin</name></author><category term="Blog" /><category term="Blog" /><category term="jekyll" /><category term="minimal-mistake" /><category term="Git" /><category term="Github" /><summary type="html"><![CDATA[Jekyll로 블로그 만들기]]></summary></entry><entry><title type="html">블로그 시작!!</title><link href="https://ye0ngjin.github.io/blog-before-changing-theme/blog/my-first-post/" rel="alternate" type="text/html" title="블로그 시작!!" /><published>2023-10-31T00:00:00+00:00</published><updated>2023-10-31T00:00:00+00:00</updated><id>https://ye0ngjin.github.io/blog-before-changing-theme/blog/my-first-post</id><content type="html" xml:base="https://ye0ngjin.github.io/blog-before-changing-theme/blog/my-first-post/"><![CDATA[<p>우선은 테스트 글</p>
<h1>테스트</h1>
<h2>테스트</h2>
<h3>테스트</h3>
<h4>테스트</h4>
<h5>테스트</h5>
<h6>테스트</h6>
<h1 id="테스트">테스트</h1>
<h2 id="테스트-1">테스트</h2>
<h3 id="테스트-2">테스트</h3>
<h4 id="테스트-3">테스트</h4>
<h5 id="테스트-4">테스트</h5>
<h6 id="테스트-5">테스트</h6>]]></content><author><name>Ye0ngjin</name></author><category term="Blog" /><category term="Blog" /><category term="Github" /><category term="Git" /><summary type="html"><![CDATA[깃허브 페이지로 블로그 만들기]]></summary></entry></feed>